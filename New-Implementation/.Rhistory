}
wl_data %>%
filter(period > warmup) %>%
group_by(policy, surgery) %>%
summarize(ws_m = mean(wt_size_m), ws_sd = sd(wt_size_m)) %>%
mutate(ws_moe = 1.96 * ws_sd / sqrt(30))
util
util %>%
filter(period > warmup) %>%
group_by(policy, resource) %>%
summarize(u_m = mean(util), u_sd = sd(util)) %>%
mutate(u_moe = 1.96 * u_sd / sqrt(30))
### WAITLIST SIZE
#data
periods <- pwu_wait_nc %>% distinct(period) %>% arrange(period) %>% pull(period)
wl_data <- tibble()
for (p in periods) {
print(p)
wait_data <- pwu_wait_nc %>%
group_by(policy, repl, .drop=FALSE) %>%
filter(arrived_on <= p & final_sched > p) %>%
summarize(wt_size = n()) %>%
group_by(policy) %>%
summarize(wt_size_m = mean(wt_size), wt_size_sd = sd(wt_size)) %>%
mutate(period = p)
wl_data <- bind_rows(wl_data, wait_data)
}
#graphs
ts_wl_p <- ggplot(wl_data, aes(x=period)) +
geom_line(aes(y=wt_size_m , color=policy)) +
geom_ribbon(aes(ymin=wt_size_m - (2*wt_size_sd / sqrt(30)), ymax=wt_size_m + (2*wt_size_sd / sqrt(30) ), fill=policy), alpha=0.3) +
theme_minimal() +
theme(legend.position="bottom") +
labs(x = 'Week #', y='Size of the Waitlist', title='Waitlist Size over time')
bx_wl_p <- ggplot(wl_data %>% filter(period > warmup)) +
geom_boxplot(aes(y=wt_size_m , fill=policy)) +
theme_minimal() +
theme(legend.position="bottom") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
labs(y='Size of the Waitlist', title='Waitlist Boxplot')
# wait list size
grid.arrange(ts_wl_p, bx_wl_p, ncol=2)
### Reschedules Data
# Usage of Reschedules
resch_data <- state %>%
modify_if(is.character, as.factor) %>%
filter(action == 'rescheduled' & period > warmup) %>%
group_by(repl,policy) %>%
summarize(resch = n()) %>%
ungroup()
resch_data
state %>%
modify_if(is.character, as.factor) %>%
filter(action == 'rescheduled' & period > warmup) %>%
group_by(repl,policy, surgery) %>%
summarize(resch = n()) %>%
ungroup()
state %>%
modify_if(is.character, as.factor) %>%
filter(action == 'rescheduled' & period > warmup) %>%
group_by(period, policy) %>%
summarize(rs = n())
state %>%
modify_if(is.character, as.factor) %>%
filter(action == 'rescheduled' & period > warmup) %>%
group_by(period, policy) %>%
summarize(rs = n()) %>% group_by(policy) %>%
summarize(rs_m = mean(rs), rs_sd = sd(rs))
state %>%
modify_if(is.character, as.factor) %>%
filter(action == 'rescheduled' & period > warmup) %>%
group_by(period, policy) %>%
summarize(rs = n()) %>% group_by(policy) %>%
summarize(rs_m = mean(rs), rs_sd = sd(rs)) %>%
mutate(rs_moe = 1.96 * rs_sd / sqrt(30))
state %>%
modify_if(is.character, as.factor) %>%
filter(action == 'rescheduled' & period > warmup) %>%
group_by(period, policy, surgery) %>%
summarize(rs = n()) %>% group_by(policy) %>%
summarize(rs_m = mean(rs), rs_sd = sd(rs)) %>%
mutate(rs_moe = 1.96 * rs_sd / sqrt(30))
state %>%
modify_if(is.character, as.factor) %>%
filter(action == 'rescheduled' & period > warmup) %>%
group_by(period, policy, surgery) %>%
summarize(rs = n()) %>% group_by(policy, surgery) %>%
summarize(rs_m = mean(rs), rs_sd = sd(rs)) %>%
mutate(rs_moe = 1.96 * rs_sd / sqrt(30))
state %>% filter(period > warmup)
state %>% filter(period > warmup) %>%
group_by(policy, period) %>%
filter(action == 'transitioned')
state %>% filter(period > warmup) %>%
group_by(policy, period) %>%
filter(action == 'transition')
state %>% filter(period > warmup) %>%
group_by(policy, period) %>%
filter(action == 'transition') %>%
count(transition    )
state %>% filter(period > warmup) %>%
group_by(policy, period) %>%
filter(action == 'transition') %>%
count(transition)
state %>% filter(period > warmup) %>%
group_by(policy, period) %>%
filter(action == 'transition') %>%
count(transition) %>% group_by(policy) %>%
summarize(t_m = mean(transition), t_sd = sd(transition)) %>%
mutate(t_moe = 1.96 * t_sd - sqrt(30))
state %>% filter(period > warmup) %>%
group_by(policy, period) %>%
filter(action == 'transition') %>%
count(transition) %>% View()
state %>% filter(period > warmup) %>%
group_by(policy, period) %>%
filter(action == 'transition') %>%
count(transition) %>% group_by(policy) %>%
summarize(t_m = mean(n), t_sd = sd(n)) %>%
mutate(t_moe = 1.96 * t_sd - sqrt(30))
state %>% filter(period > warmup) %>%
group_by(policy, period) %>%
filter(action == 'transition') %>%
count(transition) %>% group_by(policy) %>%
summarize(t_m = mean(n), t_sd = sd(n)) %>%
mutate(t_moe = 1.96 * t_sd / sqrt(30))
state %>% filter(period > warmup) %>%
group_by(policy, period, surgery) %>%
filter(action == 'transition') %>%
count(transition) %>% group_by(policy, surgery) %>%
summarize(t_m = mean(n), t_sd = sd(n)) %>%
mutate(t_moe = 1.96 * t_sd / sqrt(30))
state %>% filter(period > warmup & action == 'reschedule')
state %>% filter(period > warmup & action == 'resch')
state %>% filter(period > warmup & action == 'reschedule')
state
state %>% filter(period > warmup & action == 'rescheduled')
state %>% filter(period > warmup & action == 'rescheduled') %>%
select(repl, period, policy, surgery, action)
state %>% filter(period > warmup & action == 'rescheduled') %>%
select(repl, period, policy, surgery, action) %>%
group_by(policy) %>%
count(action)
state %>% filter(period > warmup & action == 'rescheduled') %>%
select(repl, period, policy, surgery, action) %>%
group_by(policy, period) %>%
count(action) %>%
1
state %>% filter(period > warmup & action == 'rescheduled') %>%
select(repl, period, policy, surgery, action) %>%
group_by(policy, period) %>%
count(action)
state %>% filter(period > warmup & action == 'rescheduled') %>%
select(repl, period, policy, surgery, action) %>%
group_by(policy, period) %>%
count(action) %>% group_by(policy) %>%
summarize(mean = mean(n))
state %>% filter(period > warmup & action == 'rescheduled') %>%
select(repl, period, policy, surgery, action) %>%
group_by(policy, period, surgery) %>%
count(action) %>% group_by(policy) %>%
summarize(mean = mean(n))
state %>% filter(period > warmup & action == 'rescheduled') %>%
select(repl, period, policy, surgery, action) %>%
group_by(policy, period, surgery) %>%
count(action) %>% group_by(policy, surgery) %>%
summarize(mean = mean(n))
state %>% filter(period > warmup & action == 'rescheduled') %>%
select(repl, period, policy, surgery, action) %>%
group_by(policy, period, surgery, .drop=FALSE) %>%
count(action) %>% group_by(policy, surgery, .drop=FALSE) %>%
summarize(mean = mean(n))
state %>% filter(period > warmup & action == 'rescheduled') %>%
select(repl, period, policy, action) %>%
group_by(policy, period, surgery, .drop=FALSE) %>%
count(action) %>% group_by(policy, .drop=FALSE) %>%
summarize(mean = mean(n))
state %>% filter(period > warmup & action == 'rescheduled') %>%
select(repl, period, policy, surgery, action) %>%
group_by(policy, period, .drop=FALSE) %>%
count(action) %>% group_by(policy, .drop=FALSE) %>%
summarize(mean = mean(n))
state %>% filter(period > warmup & action == 'rescheduled') %>%
select(repl, period, policy, surgery, action) %>%
group_by(policy, period, surgery, .drop=FALSE) %>%
count(action) %>% group_by(policy, surgery, .drop=FALSE) %>%
summarize(mean = mean(n))
state %>% filter(period > warmup & action == 'rescheduled') %>%
select(repl, period, policy, surgery, action) %>%
group_by(policy, period, .drop=FALSE) %>%
count(action) %>% group_by(policy, .drop=FALSE) %>%
summarize(mean = mean(n))
state %>% filter(period > warmup & action == 'rescheduled') %>%
select(repl, period, policy, surgery, action) %>%
group_by(policy, period, .drop=FALSE) %>%
count(action)
state %>% filter(period > warmup & action == 'rescheduled') %>%
select(repl, period, policy, surgery, action) %>%
group_by(policy, period, .drop=FALSE) %>%
count(action) %>% View()
state %>% filter(period > warmup & action == 'rescheduled') %>%
select(repl, period, policy, surgery, action) %>%
group_by(policy, period, .drop=FALSE) %>%
count(period)
state %>% filter(period > warmup & action == 'rescheduled') %>%
select(repl, period, policy, surgery, action) %>%
group_by(policy, period, .drop=FALSE) %>%
group_by(policy) %>%
count(period)
state %>% filter(period > warmup & action == 'rescheduled') %>%
select(repl, period, policy, surgery, action) %>%
group_by(policy, period, .drop=FALSE) %>%
group_by(policy)
state %>% filter(period > warmup & action == 'rescheduled') %>%
select(repl, period, policy, surgery, action) %>%
group_by(policy, period, .drop=FALSE) %>%
group_by(policy) %>%
count(period)
state %>% filter(period > warmup & action == 'rescheduled') %>%
select(repl, period, policy, surgery, action) %>%
group_by(policy, period, .drop=FALSE) %>% ungroup() %>%
group_by(policy) %>%
count(period)
state %>% filter(period > warmup & action == 'rescheduled') %>%
select(repl, period, policy, surgery, action) %>%
group_by(policy, period, .drop=FALSE)
state %>% filter(period > warmup & action == 'rescheduled') %>%
select(repl, policy, surgery, action) %>%
group_by(policy, period, .drop=FALSE) %>%
1
state %>% filter(period > warmup & action == 'rescheduled') %>%
select(repl, policy, surgery, action) %>%
group_by(policy, period, .drop=FALSE)
state %>% filter(period > warmup & action == 'rescheduled') %>%
select(repl, policy, surgery, action) %>%
group_by(period, .drop=FALSE)
state %>% filter(period > warmup & action == 'rescheduled') %>%
select(repl, policy, surgery, action) %>%
group_by(.drop=FALSE)
state %>% filter(period > warmup & action == 'rescheduled') %>%
select(repl, policy, surgery, action) %>%
group_by(repl, policy, .drop=FALSE) %>%
count(action)
state %>% filter(period > warmup & action == 'rescheduled') %>%
select(repl, policy, surgery, action) %>%
group_by(repl, policy, .drop=FALSE) %>%
count(surgery)
state %>% filter(period > warmup & action == 'rescheduled') %>%
select(repl, policy, surgery, action) %>%
group_by(repl, policy, .drop=FALSE) %>%
count(action)
state %>% filter(period > warmup & action == 'rescheduled') %>%
select(repl, policy, surgery, action) %>%
group_by(repl, policy, .drop=FALSE) %>%
count(action) %>% group_by(policy) %>%
summarize(r_m = mean(n), r_sd = mean(n)) %>%
mutate(r_moe = 1.96 * r_sd / sqrt(30))
state %>% filter(period > warmup & action == 'rescheduled') %>%
select(repl, policy, surgery, action) %>%
group_by(repl, policy, .drop=FALSE) %>%
count(action) %>% group_by(policy) %>%
summarize(r_m = mean(n), r_sd = mean(n)) %>%
mutate(r_moe = 1.96 * r_sd / sqrt(30) / 2000, r_m = rm/2000)
state %>% filter(period > warmup & action == 'rescheduled') %>%
select(repl, policy, surgery, action) %>%
group_by(repl, policy, .drop=FALSE) %>%
count(action) %>% group_by(policy) %>%
summarize(r_m = mean(n), r_sd = mean(n)) %>%
mutate(r_moe = 1.96 * r_sd / sqrt(30) / 2000, r_m = r_m/2000)
state %>% filter(period > warmup & action == 'rescheduled') %>%
select(repl, policy, surgery, action) %>%
group_by(repl, policy, surgery, .drop=FALSE) %>%
count(action) %>% group_by(policy) %>%
summarize(r_m = mean(n), r_sd = mean(n)) %>%
mutate(r_moe = 1.96 * r_sd / sqrt(30) / 2000, r_m = r_m/2000)
state %>% filter(period > warmup & action == 'rescheduled') %>%
select(repl, policy, surgery, action) %>%
group_by(repl, policy, surgery, .drop=FALSE) %>%
count(action) %>% group_by(policy, surgery) %>%
summarize(r_m = mean(n), r_sd = mean(n)) %>%
mutate(r_moe = 1.96 * r_sd / sqrt(30) / 2000, r_m = r_m/2000)
state %>% filter(period > warmup & action == 'rescheduled') %>%
select(repl, policy, surgery, action) %>%
group_by(repl, policy, surgery, .drop=FALSE) %>%
count(action) %>% group_by(policy, surgery) %>%
summarize(r_m = mean(n), r_sd = mean(n)) %>%
mutate(r_moe = 1.96 * r_sd / sqrt(30) / 2000, r_m = r_m/2000)
state %>% filter(period > warmup & action == 'rescheduled') %>%
select(repl, policy, surgery, action) %>%
group_by(repl, policy, surgery, .drop=FALSE) %>%
count(action) %>% group_by(policy, surgery) %>%
summarize(r_m = mean(n), r_sd = mean(n)) %>%
mutate(r_moe = 1.96 * r_sd / sqrt(30) / 2000, r_m = r_m/2000, r_sd = r_sd/2000)
state %>% filter(period > warmup & action == 'rescheduled') %>%
select(repl, policy, surgery, action) %>%
group_by(repl, policy, .drop=FALSE) %>%
count(action) %>% group_by(policy) %>%
summarize(r_m = mean(n), r_sd = mean(n)) %>%
mutate(r_moe = 1.96 * r_sd / sqrt(30) / 2000, r_m = r_m/2000, r_sd = r_sd/2000)
state %>% filter(period > warmup & action == 'rescheduled') %>%
select(repl, policy, surgery, action) %>%
group_by(repl, policy, .drop=FALSE) %>%
count(action) %>% group_by(policy) %>%
summarize(r_m = mean(n), r_sd = mean(n))
state %>% filter(period > warmup & action == 'rescheduled') %>%
select(repl, policy, surgery, action) %>%
group_by(repl, policy, .drop=FALSE) %>%
count(action) %>% group_by(policy) %>%
summarize(r_m = mean(n), r_sd = sd(n)) %>%
mutate(r_moe = 1.96 * r_sd / sqrt(30) / 2000, r_m = r_m/2000, r_sd = r_sd/2000)
state %>% filter(period > warmup & action == 'rescheduled') %>%
select(repl, policy, surgery, action) %>%
group_by(repl, policy, surgery, .drop=FALSE) %>%
count(action) %>% group_by(policy, surgery) %>%
summarize(r_m = mean(n), r_sd = sd(n)) %>%
mutate(r_moe = 1.96 * r_sd / sqrt(30) / 2000, r_m = r_m/2000, r_sd = r_sd/2000)
state %>% filter(period > warmup & action == 'transition') %>%
select(repl, policy, surgery, action) %>%
group_by(repl, policy, surgery, .drop=FALSE) %>%
count(action) %>% group_by(policy, surgery) %>%
summarize(r_m = mean(n), r_sd = sd(n)) %>%
mutate(r_moe = 1.96 * r_sd / sqrt(30) / 2000, r_m = r_m/2000, r_sd = r_sd/2000)
state %>% filter(period > warmup & action == 'transition') %>%
select(repl, policy, surgery, action) %>%
group_by(repl, policy, surgery, .drop=FALSE) %>%
count(action)
state %>% filter(period > warmup & action == 'transition') %>%
select(repl, policy, surgery, action) %>%
group_by(repl, policy, surgery, .drop=FALSE) %>%
count(action) %>% group_by(policy, surgery) %>%
summarize(r_m = mean(n), r_sd = sd(n)) %>%
mutate(r_moe = 1.96 * r_sd / sqrt(30) / 2000, r_m = r_m/2000, r_sd = r_sd/2000)
state %>% filter(period > warmup & action == 'transition') %>%
select(repl, policy, action) %>%
group_by(repl, policy, surgery, .drop=FALSE) %>%
count(action) %>% group_by(policy) %>%
summarize(r_m = mean(n), r_sd = sd(n)) %>%
mutate(r_moe = 1.96 * r_sd / sqrt(30) / 2000, r_m = r_m/2000, r_sd = r_sd/2000)
state %>% filter(period > warmup & action == 'transition') %>%
select(repl, policy, surgery, action) %>%
group_by(repl, policy, .drop=FALSE) %>%
count(action) %>% group_by(policy) %>%
summarize(r_m = mean(n), r_sd = sd(n)) %>%
mutate(r_moe = 1.96 * r_sd / sqrt(30) / 2000, r_m = r_m/2000, r_sd = r_sd/2000)
state %>% filter(period > warmup & action == 'transition') %>%
select(repl, policy, surgery, action) %>%
group_by(repl, policy, surgery, .drop=FALSE) %>%
count(action) %>% group_by(policy, surgery) %>%
summarize(r_m = mean(n), r_sd = sd(n)) %>%
mutate(r_moe = 1.96 * r_sd / sqrt(30) / 2000, r_m = r_m/2000, r_sd = r_sd/2000)
library(tidyverse)
library(readr)
library(gridExtra)
warmup <- 1000
duration <- 3000
wl_data
wl_data %>% group_by(policy) %>%
summarize(mean = mean(wt_size_m), sd = sd(wt_size_m))
wl_data %>% filter(period > warmup) %>% group_by(policy) %>%
summarize(mean = mean(wt_size_m), sd = sd(wt_size_m))
library(tidyverse)
library(tidyverse)
library(readr)
library(gridExtra)
install.packages('plotly')
library(tidyverse)
library(readr)
library(gridExtra)
library(readr)
cw1_cc5_cv10_gam99_smaller_full_util_md <- read_csv("Data/sens-res/smaller-full/state-action/cw1-cc5-cv10-gam99-smaller-full-util-md.txt")
View(cw1_cc5_cv10_gam99_smaller_full_util_md)
state_md <- read_csv(here("simulation_data",paste0('STATE-md-',"R1R2",'.txt')))
library(here)
library(tidyverse)
state_md <- read_csv(here("simulation_data",paste0('STATE-md-',"R1R2",'.txt')))
problems()
state_md
state_md %>% filter(repl == 'repl')
state_md %>% distinct(repl)
state_md %>% distinct(repl) %>% View()
state_md <- read_csv(here("simulation_data",paste0('STATE-md-',"R1R2",'.txt')),
col_types = cols(id = col_double(),
repl=col_double(),
period=col_double(),
arrived_on=col_double(),
sched_to=col_double(),
resch_from=col_double(),
resch_to=col_double()))
problems()
state_md %>% filter(id == N/A)
state_md %>% filter(is.na(id))
state_md %>% filter(!is.na(id))
path <- 'R1R2'
state_md <- read_csv(here("simulation_data",paste0('STATE-md-',path,'.txt')),
col_types = cols(id = col_double(), repl=col_double(), period=col_double(),
arrived_on=col_double(), sched_to=col_double(),
resch_from=col_double(), resch_to=col_double())) %>%
filter(!is.na(id))
problems()
state_md %>% distinct(id)
state_md %>% distinct(repl) %>% View()
rm(list=ls())
state_md <- read_csv(here("simulation_data",paste0('STATE-md-',path,'.txt')), col_types = cols(
id = col_double(), repl=col_double(), period=col_double(), arrived_on=col_double(),
sched_to=col_double(), resch_from=col_double(), resch_to=col_double())) %>% filter(!is.na(id))
state_my <- read_csv(here("simulation_data",paste0('STATE-my-',path,'.txt')), col_types = cols(
id = col_double(), repl=col_double(), period=col_double(), arrived_on=col_double(),
sched_to=col_double(), resch_from=col_double(), resch_to=col_double())) %>% filter(!is.na(id))
state <- bind_rows(state_md, state_my)
state_md <- read_csv(here("simulation_data",paste0('STATE-md-',path,'.txt')), col_types = cols(
id = col_double(), repl=col_double(), period=col_double(), arrived_on=col_double(),
sched_to=col_double(), resch_from=col_double(), resch_to=col_double())) %>% filter(!is.na(id))
state_my <- read_csv(here("simulation_data",paste0('STATE-my-',path,'.txt')), col_types = cols(
id = col_double(), repl=col_double(), period=col_double(), arrived_on=col_double(),
sched_to=col_double(), resch_from=col_double(), resch_to=col_double())) %>% filter(!is.na(id))
state <- bind_rows(state_md, state_my)
path <- 'R1R2'
state_md <- read_csv(here("simulation_data",paste0('STATE-md-',path,'.txt')), col_types = cols(
id = col_double(), repl=col_double(), period=col_double(), arrived_on=col_double(),
sched_to=col_double(), resch_from=col_double(), resch_to=col_double())) %>% filter(!is.na(id))
state_my <- read_csv(here("simulation_data",paste0('STATE-my-',path,'.txt')), col_types = cols(
id = col_double(), repl=col_double(), period=col_double(), arrived_on=col_double(),
sched_to=col_double(), resch_from=col_double(), resch_to=col_double())) %>% filter(!is.na(id))
state <- bind_rows(state_md, state_my)
problems()
problems() %>% View()
state_md <- read_csv(here("simulation_data",paste0('STATE-md-',path,'.txt')), col_types = cols(
id = col_double(), repl=col_double(), period=col_double(), arrived_on=col_double(),
sched_to=col_double(), resch_from=col_double(), resch_to=col_double())) %>% filter(!is.na(id))
state_my <- read_csv(here("simulation_data",paste0('STATE-my-',path,'.txt')), col_types = cols(
id = col_double(), repl=col_double(), period=col_double(), arrived_on=col_double(),
sched_to=col_double(), resch_from=col_double(), resch_to=col_double())) %>% filter(!is.na(id))
state <- bind_rows(state_md, state_my)
problems() %>% View()
state
state
View(state)
cost_md <- read_csv(here("simulation_data",paste0('COST-md-',path,'.txt')))
problems()
cots_md
cost_md
cost_md %>% View()
cost_md %>% distinct(repl)
cost_md %>% distinct(repl) %>% View()
cost_md <- read_csv(here("simulation_data",paste0('COST-md-',path,'.txt')))
cost_my <- read_csv(here("simulation_data",paste0('COST-my-',path,'.txt')))
cost_md
cost_md %>% distinct(repl)
cost_my %>% distinct(repl)
cost <- bind_rows(cost_md, cost_my)
cost
state_md
state_my
# Cost Data
cost_md <- read_csv(here("simulation_data",paste0('COST-md-',path,'.txt'))) %>% mutate(policy = 'MDP')
cost_my <- read_csv(here("simulation_data",paste0('COST-my-',path,'.txt'))) %>% mutate(policy = 'myopic')
cost <- bind_rows(cost_md, cost_my)
cost
# Utilization Data
util_md <- read_csv(here("simulation_data",paste0('UTIL-md-',path,'.txt'))) %>% mutate(policy = 'MDP')
util_my <- read_csv(here("simulation_data",paste0('UTIL-my-',path,'.txt'))) %>% mutate(policy = 'myopic')
util <- bind_rows(util_md, util_my) %>%
mutate(bed = usage_admin/1.5, OR = usage_OR/11.25) %>%
select(repl, period, policy, bed, OR) %>%
pivot_longer(cols = c('bed','OR'), names_to='resource', values_to = 'util')
util
util_md
util_md %>% filter(horizon_period == 0)
# Utilization Data
util_md <- read_csv(here("simulation_data",paste0('UTIL-md-',path,'.txt'))) %>% mutate(policy = 'MDP') %>% filter(horizon_period == 0)
# Utilization Data
util_md <- read_csv(here("simulation_data",paste0('UTIL-md-',path,'.txt'))) %>% mutate(policy = 'MDP') %>% filter(horizon_period == 0)
util_my <- read_csv(here("simulation_data",paste0('UTIL-my-',path,'.txt'))) %>% mutate(policy = 'myopic') %>% filter(horizon_period == 0)
util <- bind_rows(util_md, util_my) %>%
mutate(bed = usage_admin/1.5, OR = usage_OR/11.25) %>%
select(repl, period, policy, bed, OR) %>%
pivot_longer(cols = c('bed','OR'), names_to='resource', values_to = 'util')
util
# Patient Transition Data
state_md <- read_csv(here("simulation_data",paste0('STATE-md-',path,'.txt')), col_types = cols(
id = col_double(), repl=col_double(), period=col_double(), arrived_on=col_double(),
sched_to=col_double(), resch_from=col_double(), resch_to=col_double())) %>% filter(!is.na(id))
state_my <- read_csv(here("simulation_data",paste0('STATE-my-',path,'.txt')), col_types = cols(
id = col_double(), repl=col_double(), period=col_double(), arrived_on=col_double(),
sched_to=col_double(), resch_from=col_double(), resch_to=col_double())) %>% filter(!is.na(id))
state <- bind_rows(state_md, state_my)
# Cost Data
cost_md <- read_csv(here("simulation_data",paste0('COST-md-',path,'.txt'))) %>% mutate(policy = 'MDP')
cost_my <- read_csv(here("simulation_data",paste0('COST-my-',path,'.txt'))) %>% mutate(policy = 'myopic')
cost <- bind_rows(cost_md, cost_my)
# Utilization Data
util_md <- read_csv(here("simulation_data",paste0('UTIL-md-',path,'.txt'))) %>% mutate(policy = 'MDP') %>% filter(horizon_period == 0)
util_my <- read_csv(here("simulation_data",paste0('UTIL-my-',path,'.txt'))) %>% mutate(policy = 'myopic') %>% filter(horizon_period == 0)
spec()
cost <- bind_rows(cost_md, cost_my)
# Utilization Data
util_md <- read_csv(here("simulation_data",paste0('UTIL-md-',path,'.txt'))) %>% mutate(policy = 'MDP') %>% filter(horizon_period == 0)
util_my <- read_csv(here("simulation_data",paste0('UTIL-my-',path,'.txt'))) %>% mutate(policy = 'myopic') %>% filter(horizon_period == 0)
util <- bind_rows(util_md, util_my) %>%
mutate(bed = usage_admin/1.5, OR = usage_OR/11.25) %>%
select(repl, period, policy, bed, OR) %>%
pivot_longer(cols = c('bed','OR'), names_to='resource', values_to = 'util')
# Logging Data
log_md <- read_csv(here('simulation_data',paste0('SA-md-',path,'.txt')))
problems()
log_md
log_md %>% distinct(period)
log_md %>% filter(is.na(period))
123
rm(list=ls())
