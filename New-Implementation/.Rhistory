summarize(wt_size_m = mean(wt_size), wt_size_sd = sd(wt_size)) %>%
mutate(period = 1)
pwu_wait_nc %>%
group_by(policy, repl, .drop=FALSE) %>%
filter(arrived_on <= 3 & final_sched > 3) %>%
summarize(wt_size = n()) %>%
group_by(policy) %>%
summarize(wt_size_m = mean(wt_size), wt_size_sd = sd(wt_size)) %>%
mutate(period = 1)
wait_data <- pwu_wait_nc %>%
group_by(policy, repl, .drop=FALSE) %>%
filter(arrived_on <= 2 & final_sched > 2) %>%
summarize(wt_size = n()) %>%
group_by(policy) %>%
summarize(wt_size_m = mean(wt_size), wt_size_sd = sd(wt_size)) %>%
mutate(period = 1)
wait_data
wl_data <- tibble()
wl_data <- bind_rows(wl_data, wait_data)
wl_data
wl_data <- bind_rows(wl_data, wait_data)
wl_data
wl_data <- bind_rows(wl_data, wait_data)wl_data
### WAITLIST SIZE
periods <- pwu_wait_nc %>% distinct(period) %>% arrange(period) %>% pull(period)
wl_data <- tibble()
for (p in periods) {
print(p)
wait_data <- pwu_wait_nc %>%
group_by(policy, repl, .drop=FALSE) %>%
filter(arrived_on <= p & final_sched > p) %>%
summarize(wt_size = n()) %>%
group_by(policy) %>%
summarize(wt_size_m = mean(wt_size), wt_size_sd = sd(wt_size)) %>%
mutate(period = p)
wl_data <- bind_rows(wl_data, wait_data)
}
wl_data
wl_data %>% View()
wl_data
#graphs
ts_wl_p <- ggplot(wl_data, aes(x=period)) +
geom_line(aes(y=wt_size_m , color=policy)) +
geom_ribbon(aes(ymin=wt_size_m - (2*wt_size_sd ), ymax=wt_size_m + (2*wt_size_sd ), fill=policy), alpha=0.3) +
theme_minimal() +
theme(legend.position="bottom")
ts_wl_p
pwu_wait_nc
pwu_wait_nc %>% filter(repl == 0 & period <= 10)
pwu_wait_nc %>% filter(repl == 0 & period <= 10) %>% View()
pwu_wait_nc %>% filter(repl == 0 & period <= 10) %>% arrange(period, policy)
pwu_wait_nc %>% filter(repl == 0 & period <= 10) %>% arrange(period, policy, id)
pwu_wait_nc %>% filter(repl == 0 & period <= 10) %>% arrange(period, policy, id) %>% View()
wl_data
wl_data %>% View()
wl_data %>% group_by(period) %>%
filter(min(wt_size_m) == max(wt_size_m))
wl_data %>% group_by(period) %>%
filter(min(wt_size_m) != max(wt_size_m))
pwu_wait_nc %>% filter(period == 47)
pwu_wait_nc %>% filter(period == 47) %>%
arrange(policy, id)
pwu_wait_nc %>% filter(period == 47) %>%
arrange(repl, policy, id)
pwu_wait_nc %>% filter(period == 47) %>%
arrange(repl, policy, id) %>% View()
pwu_wait_nc %>% filter(period == 47) %>%
arrange(repl, policy, id) %>%
count(policy)
pwu_wait_nc %>% filter(period == 47) %>%
arrange(repl, policy, id) %>%
count(policy,repl)
pwu_wait_nc %>% filter(period == 47) %>%
count(policy,repl) %>%
arrange(repl, policy) %>%
pwu_wait_nc %>% filter(period == 47) %>%
count(policy,repl) %>%
arrange(repl, policy)
pwu_wait_nc %>% filter(period == 47) %>%
count(policy,repl) %>%
arrange(repl, policy)
pwu_wait_nc %>% filter(period == 47 & repl == 4) %>%
arrange(repl, policy, id) %>% View()
pwu_wait_nc
state %>% filter(policy == 'myopic' & repl == 4 & id == 226)
pwu_wait_nc  %>% filter(policy == 'myopic' & repl == 4 & id == 226)
pwu_wait_nc  %>% groupby(policy, repl) %>% count(id)
pwu_wait_nc  %>% group_by(policy, repl) %>% count(id)
pwu_wait_nc  %>% group_by(policy, repl) %>% count(id) %>% View()
pwu_wait_c  %>% group_by(policy, repl) %>% count(id) %>% View()
pwu_wait_nc  %>% group_by(policy, repl) %>% count(id) %>% View()
db_ids <- pwu_wait_nc  %>% group_by(policy, repl) %>% count(id) %>% drop(id)
db_ids <- pwu_wait_nc  %>% group_by(policy, repl) %>% count(id) %>% select(-id)
db_ids
db_ids <- pwu_wait_nc  %>% group_by(policy, repl) %>% count(id) %>% select(-n)
db_ids
state %>% right_join(db_ids)
state %>% right_join(db_ids) %>% View()
db_ids <- pwu_wait_nc  %>% group_by(policy, repl) %>% count(id) %>% filter(n >= 1) %>% select(-n)
db_ids
db_ids <- pwu_wait_nc  %>% group_by(policy, repl) %>% count(id) %>% filter(n > 1) %>% select(-n)
db_ids
state %>% right_join(db_ids) %>% View()
state %>% right_join(db_ids) %>% arrange(policy, repl, id) %>% View()
state %>%
group_by(policy, repl, id)
state %>%
group_by(policy, repl, id) %>%
filter(action %in% c('arrived','scheduled', 'rescheduled')) %>%
slice(c(1,n())) %>%
mutate(final_sched = case_when(
is.na(sched_to) == F ~ sched_to,
is.na(resch_to) == F ~ resch_to,
TRUE ~ 6001
))
state %>%
group_by(policy, repl, id) %>%
filter(action %in% c('arrived','scheduled', 'rescheduled')) %>%
slice(c(1,n())) %>%
mutate(final_sched = case_when(
is.na(sched_to) == F ~ sched_to,
is.na(resch_to) == F ~ resch_to,
TRUE ~ 6001
)) %>%
filter(policy=='MDP' & repl==0 & id==2377)
state %>%
group_by(policy, repl, id) %>%
filter(action %in% c('arrived','scheduled', 'rescheduled')) %>%
slice(c(1,n())) %>%
mutate(final_sched = case_when(
is.na(sched_to) == F ~ sched_to,
is.na(resch_to) == F ~ resch_to,
TRUE ~ 6001
)) %>%
filter(policy=='MDP' & repl==0 & id==2377)
state %>%
group_by(policy, repl, id) %>%
filter(action %in% c('arrived','scheduled', 'rescheduled')) %>%
slice(c(1,n())) %>%
mutate(final_sched = case_when(
is.na(sched_to) == F ~ sched_to,
is.na(resch_to) == F ~ resch_to,
TRUE ~ 6001
)) %>%
filter(policy=='MDP' & repl==0 & id==2377)
state %>%
group_by(policy, repl, id) %>%
filter(action %in% c('arrived','scheduled', 'rescheduled')) %>%
slice(c(1,n())) %>%
filter(policy=='MDP' & repl==0 & id==2377)
state %>%
group_by(policy, repl, id) %>%
filter(action %in% c('arrived','scheduled', 'rescheduled')) %>%
slice(c(1,n())) %>%
mutate(final_sched = case_when(
is.na(sched_to) == F ~ sched_to,
is.na(resch_to) == F ~ resch_to,
TRUE ~ 6001
)) %>%
mutate(final_sched = min(final_sched, na.rm=T)) %>%
slice(c(1,n())) %>%
filter(policy=='MDP' & repl==0 & id==2377)
state %>%
group_by(policy, repl, id) %>%
filter(action %in% c('arrived','scheduled', 'rescheduled')) %>%
slice(c(1,n())) %>%
mutate(final_sched = case_when(
is.na(sched_to) == F ~ sched_to,
is.na(resch_to) == F ~ resch_to,
TRUE ~ 6001
)) %>%
mutate(final_sched = min(final_sched, na.rm=T)) %>%
slice(c(1)) %>%
filter(policy=='MDP' & repl==0 & id==2377)
rm(list=ls())
### READ DATA
# State Data
state_md <- read_csv("Data/sens-res/smaller-full/state-action/cw1-cc5-cv10-gam99-smaller-full-state-md.txt")
state_my <- read_csv("Data/sens-res/smaller-full/state-action/cw1-cc5-cv10-gam99-smaller-full-state-my.txt")
state <- bind_rows(state_md, state_my)
rm(state_md,state_my)
# Cost Data
cost_md <- read_csv("Data/sens-res/smaller-full/state-action/cw1-cc5-cv10-gam99-smaller-full-cost-md.txt") %>% mutate(policy = "MDP")
cost_my <- read_csv("Data/sens-res/smaller-full/state-action/cw1-cc5-cv10-gam99-smaller-full-cost-my.txt")  %>% mutate(policy = "Myopic")
cost <- bind_rows(cost_md, cost_my)
rm(cost_md,cost_my)
# Utilization Data
util_md <- read_csv("Data/sens-res/smaller-full/state-action/cw1-cc5-cv10-gam99-smaller-full-util-md.txt") %>% mutate(policy = "MDP") %>% filter(horizon_period == 0)
util_my <- read_csv("Data/sens-res/smaller-full/state-action/cw1-cc5-cv10-gam99-smaller-full-util-my.txt") %>% mutate(policy = "Myopic") %>% filter(horizon_period == 0)
util <- bind_rows(util_md, util_my) %>%
mutate(bed = usage_admin/1.5, OR = usage_OR/11.25) %>%
select(repl, period, policy, bed, OR) %>%
pivot_longer(cols = c('bed','OR'), names_to='resource', values_to = 'util')
rm(util_md,util_my)
### COST ANALYSIS
# Timeseries Cost
ts_cost <- cost %>% group_by(period, policy) %>% summarise(cost_m = mean(cost), cost_sd = sd(cost))
ts_cost_p <- ggplot(ts_cost, aes(x=period)) +
geom_line(aes(y=cost_m, color=policy)) +
geom_ribbon(aes(ymin=cost_m- (2*cost_sd), ymax=cost_m+ (2*cost_sd), fill=policy), alpha=0.3) +
theme_minimal() +
theme(legend.position="bottom")
bx_cost_p <- ggplot(cost %>% filter(period > 3000)) +
geom_boxplot(aes(y=cost, fill=policy)) +
theme_minimal() +
theme(legend.position="bottom")
grid.arrange(ts_cost_p, bx_cost_p, ncol=2)
### UTILIZATION ANALYSIS
# Utilization
bx_util_p <- ggplot(util %>% filter(period > 3000)) +
geom_boxplot(aes(y=util, x=resource, fill=policy)) +
theme_minimal()
bx_util_p
### WAIT TIME ANALYSIS
# Post warm-up Patients
pwu_pat <- state %>%
group_by(policy, repl, id) %>%
filter(action %in% c('arrived')) %>%
ungroup() %>%
filter(arrived_on > 3000) %>%
select(policy, repl, id)
# Post warm-up wait time (only completed)
pwu_wait_c <- state %>%
group_by(policy, repl, id) %>%
filter(action %in% c('arrived','scheduled', 'rescheduled')) %>%
slice(c(1,n())) %>%
mutate(final_sched = case_when(
is.na(sched_to) == F ~ sched_to,
is.na(resch_to) == F ~ resch_to
)) %>%
mutate(final_sched = min(final_sched, na.rm=T)) %>%
slice(c(1)) %>%
filter(final_sched != Inf) %>%
select(policy, repl, id, period, priority, complexity, surgery, arrived_on, final_sched) %>%
ungroup() %>%
mutate(wait = final_sched - arrived_on)
# Post warm-up wait time (including not completed)
pwu_wait_nc <- state %>%
group_by(policy, repl, id) %>%
filter(action %in% c('arrived','scheduled', 'rescheduled')) %>%
slice(c(1,n())) %>%
mutate(final_sched = case_when(
is.na(sched_to) == F ~ sched_to,
is.na(resch_to) == F ~ resch_to,
TRUE ~ 6001
)) %>%
mutate(final_sched = min(final_sched, na.rm=T)) %>%
slice(c(1)) %>%
select(policy, repl, id, period, priority, complexity, surgery, arrived_on, final_sched) %>%
ungroup() %>%
mutate(wait = final_sched - arrived_on)
#graphs
bx_wait_c <- ggplot(pwu_wait_c %>% right_join(pwu_pat) %>% drop_na()) +
geom_boxplot(aes(y=wait, x=surgery, fill=policy)) +
facet_grid(complexity ~ priority)
bx_wait_nc <- ggplot(pwu_wait_nc %>% right_join(pwu_pat)) +
geom_boxplot(aes(y=wait, x=surgery, fill=policy)) +
facet_grid(complexity ~ priority)
bx_wait_c
bx_wait_nc
### WAITLIST SIZE
#data
periods <- pwu_wait_nc %>% distinct(period) %>% arrange(period) %>% pull(period)
wl_data <- tibble()
for (p in periods) {
print(p)
wait_data <- pwu_wait_nc %>%
group_by(policy, repl, .drop=FALSE) %>%
filter(arrived_on <= p & final_sched > p) %>%
summarize(wt_size = n()) %>%
group_by(policy) %>%
summarize(wt_size_m = mean(wt_size), wt_size_sd = sd(wt_size)) %>%
mutate(period = p)
wl_data <- bind_rows(wl_data, wait_data)
}
#graphs
ts_wl_p <- ggplot(wl_data, aes(x=period)) +
geom_line(aes(y=wt_size_m , color=policy)) +
geom_ribbon(aes(ymin=wt_size_m - (2*wt_size_sd ), ymax=wt_size_m + (2*wt_size_sd ), fill=policy), alpha=0.3) +
theme_minimal() +
theme(legend.position="bottom")
ts_wl_p
wl_data
#graphs
ts_wl_p <- ggplot(wl_data, aes(x=period)) +
geom_line(aes(y=wt_size_m , color=policy)) +
geom_ribbon(aes(ymin=wt_size_m - (2*wt_size_sd ), ymax=wt_size_m + (2*wt_size_sd ), fill=policy), alpha=0.3) +
theme_minimal() +
theme(legend.position="bottom")
bx_wl_p <- ggplot(wl_data %>% filter(period > 3000)) +
geom_boxplot(aes(y=wt_size_m , fill=policy)) +
theme_minimal() +
theme(legend.position="bottom")
grid.arrange(ts_wl_p, bx_wl_p, ncol=2)
grid.arrange(ts_cost_p, bx_cost_p, ncol=2)
# Usage of Reschedules
resch_data <- state %>%
modify_if(is.character, as.factor) %>%
filter(action == 'rescheduled' & period > 3000) %>%
group_by(repl,policy) %>%
summarize(resch = n()) %>%
ungroup()
ggplot(resch_data, aes(x=policy, y=resch, fill=policy)) +
geom_boxplot() +
theme_minimal()
resch_data_time <- state %>%
modify_if(is.character, as.factor) %>%
filter(action == 'rescheduled' & period > 3000) %>%
group_by(period, repl,policy) %>%
summarize(resch = n()) %>%
group_by(period, policy) %>%
summarize(resch_m = mean(resch), resch_std = sd(resch)) %>%
ungroup()
ggplot(resch_data_time, aes(x=period)) +
geom_line(aes(y=resch_m, color=policy)) +
geom_ribbon(aes(ymin=resch_m- (2*resch_std), ymax=resch_m+ (2*resch_std), fill=policy), alpha=0.3) +
geom_smooth(aes(y=resch_m)) +
theme_minimal() +
facet_grid(~policy)
bx_resch <- ggplot(resch_data, aes(x=policy, y=resch, fill=policy)) +
geom_boxplot() +
theme_minimal()
### FINAL PLOTS
# Cost
grid.arrange(ts_cost_p, bx_cost_p, ncol=2)
# utilization
bx_util_p
# wait time
bx_wait_c
bx_wait_nc
# wait list size
grid.arrange(ts_wl_p, bx_wl_p, ncol=2)
# reschedules
bx_resch
rm(list=ls())
source("E:/Documents/Projects/UOttawa-Dynamic-Knapsack-Problem-Python/New-Implementation/data_analysis.R")
source("E:/Documents/Projects/UOttawa-Dynamic-Knapsack-Problem-Python/New-Implementation/data_analysis.R")
### FINAL PLOTS
# Cost
grid.arrange(ts_cost_p, bx_cost_p, ncol=2)
# utilization
bx_util_p
# wait time
bx_wait_c
bx_wait_nc
# wait list size
grid.arrange(ts_wl_p, bx_wl_p, ncol=2)
# reschedules
bx_resch
pwu_wait_nc
ggplot(pwu_wait_nc %>% right_join(pwu_pat)) +
geom_boxplot(aes(y=wait, fill=policy)) +
facet_wrap(~surgery)
ggplot(pwu_wait_nc %>% right_join(pwu_pat)) +
geom_boxplot(aes(y=wait, fill=policy)) +
facet_wrap(~priority)
ggplot(pwu_wait_nc %>% right_join(pwu_pat)) +
geom_boxplot(aes(y=wait, fill=policy)) +
facet_wrap(~complexity)
pwu_wait_nc
pwu_wait_nc %>% group_by(policy, priority)
pwu_wait_nc %>% group_by(policy, priority) %>%
summarize(wait_m = mean(wait), wait_sd = sd(wait))
pwu_wait_nc %>% group_by(policy, complexity) %>%
summarize(wait_m = mean(wait), wait_sd = sd(wait))
pwu_wait_nc %>% group_by(policy, surgery) %>%
summarize(wait_m = mean(wait), wait_sd = sd(wait))
pwu_wait_c %>% group_by(policy, surgery) %>%
summarize(wait_m = mean(wait), wait_sd = sd(wait))
pwu_wait_nc %>% group_by(policy, surgery) %>%
summarize(wait_m = mean(wait), wait_sd = sd(wait))
pwu_wait_nc %>% group_by(policy, complexity) %>%
summarize(wait_m = mean(wait), wait_sd = sd(wait))
pwu_wait_nc %>% group_by(policy, priority) %>%
summarize(wait_m = mean(wait), wait_sd = sd(wait))
# wait list size
grid.arrange(ts_wl_p, bx_wl_p, ncol=2)
# utilization
bx_util_p
bx_resch
### FINAL PLOTS
# Cost
grid.arrange(ts_cost_p, bx_cost_p, ncol=2)
bx_wl_p
wl_data %>% filter(period > 3000)
wl_data
wl_data %>% group_by(policy) %>%
summarize(wt_size_m_m = mean(wt_size_m), wt_size_sd_sd = sd(wt_size_m ))
library(tidyverse)
library(readr)
library(gridExtra)
summarize(wt_size_m_m = mean(wt_size_m), wt_size_sd_sd = sd(wt_size_m ))
wl_data %>% group_by(policy) %>%
summarize(wt_size_m_m = mean(wt_size_m), wt_size_sd_sd = sd(wt_size_m ))
### WAITLIST SIZE
#data
periods <- pwu_wait_nc %>% distinct(period) %>% arrange(period) %>% pull(period)
wl_data <- tibble()
for (p in periods) {
print(p)
wait_data <- pwu_wait_nc %>%
group_by(policy, repl, .drop=FALSE) %>%
filter(arrived_on <= p & final_sched > p) %>%
summarize(wt_size = n()) %>%
# group_by(policy) %>%
# summarize(wt_size_m = mean(wt_size), wt_size_sd = sd(wt_size)) %>%
mutate(period = p)
wl_data <- bind_rows(wl_data, wait_data)
}
wl_data
wl_data %>% group_by(policy) %>%
summarize(wt_size_m = mean(wt_size))
wl_data %>% group_by(policy) %>%
summarize(wt_size_m = median(wt_size), )
wl_data %>% group_by(policy) %>%
summarize(wt_size_m = mean(wt_size), wt_size_sd = sd(wt_size))
util %>% filter(period > 3000)
util %>% filter(period > 3000) %>%
group_by(policy, resource) %>%
summarize(util_m = mean(util), util_sd = sd(util))
resch_data
resch_data %>%
group_by(policy) %>%
summarize(resch_m = mean(resch), resch_sd = sd(resch))
cost %>% filter(period > 3000) %>%
group_by(policy) %>%
summarize(resch_m = mean(resch), resch_sd = sd(resch))
cost
cost %>% filter(period > 3000) %>%
group_by(policy) %>%
summarize(cost_m = mean(cost ), cost_sd = sd(cost ))
pwu_wait_c
pwu_wait_c %>%
group_by(policy,repl) %>%
count()
pwu_wait_c %>%
group_by(policy,repl) %>%
count()
library(tidyverse)
library(readr)
library(gridExtra)
library(tidyverse)
library(readr)
library(gridExtra)
pwu_wait_c %>%
group_by(policy,repl) %>%
count()
pwu_wait_c %>%
group_by(policy,repl) %>%
count() %>%
group_by(policy) %>%
summarize(n_m = mean(n), n_sd = sd(n))
pwu_wait_c %>%
filter(period > 3000) %>%
group_by(policy,repl) %>%
count() %>%
group_by(policy) %>%
summarize(n_m = mean(n), n_sd = sd(n))
pwu_wait_c
resch_data
state %>%
filter(action == 'rescheduled' & period > 3000) %>%
group_by(repl,policy,surgery) %>%
summarize(resch = n()) %>%
ungroup()
state %>%
filter(action == 'rescheduled' & period > 3000) %>%
group_by(policy,surgery) %>%
summarize(resch = n()) %>%
ungroup()
state %>%
filter(action == 'rescheduled' & period > 3000) %>%
group_by(repl,policy,surgery) %>%
summarize(resch = n()) %>%
group_by(policy, surgery) %>%
summarize(resch_m = mean(resch), resch_sd = sd(resch)))
state %>%
filter(action == 'rescheduled' & period > 3000) %>%
group_by(repl,policy,surgery) %>%
summarize(resch = n()) %>%
group_by(policy, surgery) %>%
summarize(resch_m = mean(resch), resch_sd = sd(resch))
state %>%
filter(action == 'rescheduled' & period > 3000) %>%
group_by(repl,policy,priority) %>%
summarize(resch = n()) %>%
group_by(policy, priority) %>%
summarize(resch_m = mean(resch), resch_sd = sd(resch))
state %>%
filter(action == 'rescheduled' & period > 3000) %>%
group_by(repl,policy,complexity) %>%
summarize(resch = n()) %>%
group_by(policy, complexity) %>%
summarize(resch_m = mean(resch), resch_sd = sd(resch))
state %>%
filter(action == 'rescheduled' & period > 3000) %>%
group_by(repl,policy,surgery) %>%
summarize(resch = n()) %>%
group_by(policy, surgery) %>%
summarize(resch_m = mean(resch), resch_sd = sd(resch))
state %>%
filter(action == 'rescheduled' & period > 3000) %>%
group_by(repl,policy,complexity) %>%
summarize(resch = n()) %>%
group_by(policy, complexity) %>%
summarize(resch_m = mean(resch), resch_sd = sd(resch))
state %>%
filter(action == 'rescheduled' & period > 3000) %>%
group_by(repl,policy,priority) %>%
summarize(resch = n()) %>%
group_by(policy, priority) %>%
summarize(resch_m = mean(resch), resch_sd = sd(resch))
